"use strict";function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}/**
 * Copy a 2 dimensional array
 * @param rows
 * @returns
 */var copy=function(a){return _toConsumableArray(a.map(function(a){return _toConsumableArray(a)}))},_clone=function b(a){return gmatrix(copy(a))},_equals=function(d,a){var b=d.length;// Check row length
if(b!==a.length)return!1;for(var e,f=!0,g=0;g<b;g++){// Check column length
if(e=d[g].length,e!==a[g].length){f=!1;break}for(var h=0;h<e;h++)if(d[g][h]!==a[g][h]){f=!1;break}}return f},_forEach=function f(a,b){for(var c,d=a.length,e=0;e<d&&(c=b(a[e]),!1!==c);e++);},_forEachElement=function g(a,b){for(var d,e=a.length,f=0;f<e;f++){d=a[f].length;for(var h,i=0;i<d&&(h=b(a[f][i],f,i),!1!==h);i++);}},_rotateLeft=function h(a){for(var b,d=[],e=a.length-1,f=a[0].length-1,g=f;0<=g;g--){b=[];for(var i=0;i<=e;i++)b.push(a[i][g]);d.push(b)}return gmatrix(d)},_rotateRight=function h(a){for(var b,d=[],e=a.length-1,f=a[0].length-1,g=0;g<=f;g++){b=[];for(var i=e;0<=i;i--)b.push(a[i][g]);d.push(b)}return gmatrix(d)},_rotate=function b(a){return gmatrix(_toConsumableArray(a.map(function(a){return _toConsumableArray(a).reverse()})).reverse())},_flipHorizontal=function b(a){return gmatrix(_toConsumableArray(a.map(function(a){return _toConsumableArray(a)})).reverse())},_flipVertical=function b(a){return gmatrix(_toConsumableArray(a.map(function(a){return _toConsumableArray(a).reverse()})))},gmatrix=function(a){return a||(a=[]),{toJSON:function b(){return copy(a)},equals:function c(b){return _equals(a,b.toJSON())},clone:function b(){return _clone(a)},forEach:function c(b){return _forEach(a,b)},forEachElement:function c(b){return _forEachElement(a,b)},rotateLeft:function b(){return _rotateLeft(a)},rotateRight:function b(){return _rotateRight(a)},rotate180:function b(){return _rotate(a)},flipHorizontal:function b(){return _flipHorizontal(a)},flipVertical:function b(){return _flipVertical(a)}}};/**
 * Return a new gmatrix that's a copy of the given one
 * @param rows
 * @returns {{toJSON, forEach, forEachElement, rotateLeft, rotateRight, rotate180, flipHorizontal, flipVertical}}
 */module.exports=gmatrix;
